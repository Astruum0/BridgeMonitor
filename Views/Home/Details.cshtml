@{
    ViewData["Title"] = "Details";
}
@model BridgeMonitor.Models.ClosingList;

<div class="text-left">
    <h1 class="display-4">Détails de la fermeture du @Model.DetailedClosing.FormattedClosingDateOnlyDays</h1>
    <ul class="list-group">
        <li class="list-group-item">
            Date de fermeture : @Model.DetailedClosing.FormattedClosingDateFR
        </li>
        <li class="list-group-item">
            Date de réouverture : @Model.DetailedClosing.FormattedReopeningDateFR
        </li>
        <li class="list-group-item">
            Bateau / Cause : @Model.DetailedClosing.BoatName
        </li>

        <li class="list-group-item">
            Durée de la fermeture : @Model.DetailedClosing.ClosingDuration
        </li>
        <li class="list-group-item" id="timeUntilClosing">
            Prochaine fermeture dans
        </li>
        @if(Model.DetailedClosing.TrafficRisk) {
            <li class="list-group-item list-group-item-danger">
                Risque élevé de bouchons !
            </li>   
        } else {
            <li class="list-group-item list-group-item-success">
                Risque faible de bouchons
            </li>   
        }

        
        
    </ul>
</div>

@section Scripts {
    <script type="text/javascript">

    const refreshTimer = () => {
        var closeDate = new Date("@Model.DetailedClosing.FormattedClosingDate")
        var now = Date.now()
        var delta = Math.abs(closeDate - now) / 1000;
        var days = Math.floor(delta / 86400);
        delta -= days * 86400;
        var hours = Math.floor(delta / 3600) % 24;
        delta -= hours * 3600;
        var minutes = Math.floor(delta / 60) % 60;
        delta -= minutes * 60;
        var seconds = Math.floor(delta % 60);

        var daysStr = days < 1 ? "" : days + " jours, "
        var hoursStr = hours < 1 ? "" : hours + " heures"
        var minutesStr = minutes < 1 ? "" : ", " + minutes + " minutes"
        var secondsStr = seconds < 1 ? "" : ", " + seconds + " secondes"

        document.getElementById("timeUntilClosing").innerText = "Prochaine fermeture dans " + daysStr + hoursStr + minutesStr + secondsStr
    }

    refreshTimer()
    setInterval(() => {
        refreshTimer()
    }, 1000)
        
    </script>
}
